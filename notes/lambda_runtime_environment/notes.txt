
sudo yum install gcc-gfortran.x86_64 python-pip waf

# all files to be included in the runtime environment must be in /var/task
sudo mkdir -p /var/task
sudo chown ec2-user:ec2-user /var/task
cd /var/task

# install cfitsio
wget http://heasarc.gsfc.nasa.gov/FTP/software/fitsio/c/cfitsio-3.47.tar.gz
tar xf cfitsio-3.47.tar.gz
cd cfitsio-3.47/
sudo ./configure --prefix=/var/task/cfitsio
make
make install
cd ..
rm -rf cfitsio-3.47*

# include system libs in the runtime environment because they aren't available
# in the environment lambda runs on
mkdir lib
cp /lib64/ld-linux-x86-64.so.2 lib
cp /lib64/libcom_err.so.2 lib
cp /lib64/libcrypto.so.10 lib
cp /lib64/libcrypt.so.1 lib
cp /lib64/libc.so.6 lib
cp /lib64/libcurl.so.4 lib
cp /lib64/libdl.so.2 lib
cp /lib64/libgomp.so.1 lib
cp /lib64/libgssapi_krb5.so.2 lib
cp /lib64/libidn2.so.0 lib
cp /lib64/libk5crypto.so.3 lib
cp /lib64/libkrb5.so.3 lib
cp /lib64/libkrb5support.so.0 lib
cp /lib64/liblber-2.4.so.2 lib
cp /lib64/libm.so.6 lib
cp /lib64/libnghttp2.so.14 lib
cp /lib64/libnspr4.so lib
cp /lib64/libnss3.so lib
cp /lib64/libnssutil3.so lib
cp /lib64/libpcre.so.1 lib
cp /lib64/libplc4.so lib
cp /lib64/libplds4.so lib
cp /lib64/libpthread.so.0 lib
cp /lib64/libresolv.so.2 lib
cp /lib64/librt.so.1 lib
cp /lib64/libsasl2.so.3 lib
cp /lib64/libselinux.so.1 lib
cp /lib64/libsmime3.so lib
cp /lib64/libssh2.so.1 lib
cp /lib64/libssl3.so lib
cp /lib64/libssl.so.10 lib
cp /lib64/libunistring.so.0 lib
cp /lib64/libz.so.1 lib
cp /lib64/libldap-2.4.so.2 lib
cp /lib64/libkeyutils.so.1 lib
ln -s lib/libcurl.so.4 lib/libcurl.so

# install hstcal
wget https://github.com/spacetelescope/hstcal/archive/master.zip
unzip master.zip
cd hstcal-master
export PKG_CONFIG_PATH=/var/task/cfitsio/lib/pkgconfig:/var/task/lib:$PKG_CONFIG_PATH
waf configure --prefix=/var/task/hstcal --with-cfitsio=/var/task/cfitsio
waf build
waf install
rm -rf master.zip hstcal-master/
export PATH=/var/task/hstcal/bin:$PATH

# this is a hack for now, now custom python packages have not been installed
# been installed in the bundle
# I'm skipping the instructions, but install miniconda and the astroconda pkgs
python
>>> obsid='ICDYF0OYQ'
>>> from drizzlepac.hlautils.astroquery_utils import retrieve_observation
>>> retrieve_observation(obsid, suffix=['ASN', "RAW"] )
INFO: ['icdyf0oyq_raw.fits']

# place a copy of the CRDS cache in $HOME/crds_cache and define env variables
export CRDS_PATH=$HOME/crds_cache
export CRDS_SERVER_URL=https://hst-crds.stsci.edu
export iref=${CRDS_PATH}/references/hst/iref/
export jref=${CRDS_PATH}/references/hst/jref/
export oref=${CRDS_PATH}/references/hst/oref/
export lref=${CRDS_PATH}/references/hst/lref/
export nref=${CRDS_PATH}/references/hst/nref/
export uref=${CRDS_PATH}/references/hst/uref/
export uref_linux=$uref

crds bestrefs --update-bestrefs --sync-references=1 --files icdyf0oyq_raw.fits

calwf3.e icdyf0oyq_raw.fits

# package the runtime environment and upload it to s3; the lambda funtion will
# reference this location
zip -r bundle.zip *
aws s3 cp bundle.zip s3://cslocum-cal-proto/runtime/bundle.zip

